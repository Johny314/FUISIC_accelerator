-- phpMyAdmin SQL Dump
-- version 5.1.1
-- https://www.phpmyadmin.net/
--
-- Хост: localhost:8889
-- Время создания: Апр 27 2023 г., 07:37
-- Версия сервера: 5.7.34
-- Версия PHP: 7.4.21

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `P523033_Test_3`
--

-- --------------------------------------------------------

--
-- Структура таблицы `Задачи`
--

CREATE TABLE `Задачи` (
    `Код_задачи` int(11) NOT NULL,
    `Задача` text NOT NULL,
    `Решение` text NOT NULL,
    `Ответ` text NOT NULL,
    `Тест` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `Задачи`
--

INSERT INTO `Задачи` (`Код_задачи`, `Задача`, `Решение`, `Ответ`, `Тест`) VALUES
(1, 'В треугольнике ABC угол BAC равен 60 градусов, а углы B и C равны между собой. Найдите углы треугольника.', 'Из условия следует, что угол BAC равен 60 градусов, а значит два других угла в сумме должны дать 180-60 = 120 градусов. Одновременно же по условию углы B и C равны между собой, то есть каждый равен (180-120)/2 = 30 градусов. Таким образом, углы треугольника ABC равны 60, 60, 60 градусов.', '60, 60, 60', 1),
(2, 'Найдите первообразную функции $f(x) = 3x^2 - 4x + 5$.', 'Решение: Чтобы найти первообразную функции $f(x)$, нам нужно найти функцию $F(x)$, производная которой равна $f(x)$. Для этого, мы интегрируем $f(x)$ по переменной $x$:\r\n\r\n$$\\int f(x) \\,dx = \\int (3x^2 - 4x + 5) \\,dx = x^3 - 2x^2 + 5x + C$$\r\n\r\nгде $C$ - постоянная интегрирования. Таким образом, $F(x) = x^3 - 2x^2 + 5x + C$ является первообразной функции $f(x)$.', '1', 1),
(3, 'Задача 3', 'Решение', '2', 1),
(4, 'Уравнение $x^2 - 5x - k = 0$ имеет два корня: один из них в $a$ раз больше другого. Найдите значение $a$, если $k$ является простым числом.', 'Пусть уравнение $x^2 - 5x - k = 0$ имеет корни $x_1$ и $x_2$. Тогда по формуле Виета:\n\n$$\\begin{cases} x_1 + x_2 = 5 \\\\ x_1 x_2 = -k \\end{cases}$$\n\nПо условию задачи, один из корней в $a$ раз больше другого:\n\n$$x_1 = ax_2$$\n\nТогда из первого уравнения системы можно выразить $x_2$ через $x_1$:\n\n$$x_2 = 5 - x_1$$\n\nПодставляя это выражение во второе уравнение системы, получаем:\n\n$$x_1 x_2 = -k \\Rightarrow ax_1^2 - 5ax_1 + k = 0$$\n\nТак как это квадратное уравнение имеет два корня, то его дискриминант должен быть положительным:\n\n$$(5a)^2 - 4ak > 0 \\Rightarrow 25a^2 > 4k$$\n\nИз условия задачи следует, что $k$ -- простое число, а значит его делители это только 1 и $k$. Так как $25a^2 > 4k$, то $a$ должно быть таким, что $a^2 > 4k/25$. То есть $a$ должно быть больше 2. Но при $a = 3$ получаем $a^2 = 9$ и $4k/25$ меньше либо равно 2,2. При $a = 4$ имеем $a^2 = 16$, а $4k/25$ больше или равно 4, что удовлетворяет условию задачи. Таким образом, $a = 4$ и это единственное возможное значение для простого $k$.', '4', 1);

-- --------------------------------------------------------

--
-- Структура таблицы `История`
--

CREATE TABLE `История` (
    `Код записи истории` int(5) NOT NULL,
    `Пользователь` int(10) NOT NULL,
    `Дата прохождения задания` datetime DEFAULT NULL,
    `Подборка` int(5) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Дамп данных таблицы `История`
--

INSERT INTO `История` (`Код записи истории`, `Пользователь`, `Дата прохождения задания`, `Подборка`) VALUES
(1, 9, '2023-04-04 09:56:47', 2),
(2, 9, '2023-04-04 09:57:09', 2),
(4, 9, '2023-04-13 15:25:30', 1),
(3, 10, '2023-04-05 15:13:13', 2);

-- --------------------------------------------------------

--
-- Структура таблицы `История тестов`
--

CREATE TABLE `История тестов` (
    `Код_Записи_Истории` int(11) NOT NULL,
    `Пользователь` int(11) NOT NULL,
    `Дата_прохождения_задания` datetime NOT NULL,
    `Тест` int(11) NOT NULL,
    `Результат` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `История тестов`
--

INSERT INTO `История тестов` (`Код_Записи_Истории`, `Пользователь`, `Дата_прохождения_задания`, `Тест`, `Результат`) VALUES
(2, 9, '2023-04-20 06:53:11', 1, 10),
(3, 9, '2023-04-19 11:51:52', 1, 0),
(4, 9, '2023-04-20 07:24:45', 1, 0),
(5, 9, '2023-04-20 08:38:40', 1, 6),
(6, 9, '2023-04-20 09:13:29', 1, 5),
(7, 9, '2023-04-20 09:15:47', 1, 6),
(8, 9, '2023-04-20 09:21:24', 1, 9),
(9, 9, '2023-04-20 09:23:26', 1, 8),
(10, 9, '2023-04-20 09:24:42', 1, 0),
(11, 9, '2023-04-20 09:25:14', 1, 1),
(12, 9, '2023-04-24 07:19:40', 1, 2),
(13, 9, '2023-04-24 07:20:45', 1, 3),
(14, 9, '2023-04-24 07:20:59', 1, 5),
(15, 9, '2023-04-24 07:27:15', 1, 5),
(16, 9, '2023-04-24 07:27:42', 1, 3),
(17, 9, '2023-04-24 07:28:55', 1, 2),
(18, 9, '2023-04-24 07:39:48', 1, 11);

-- --------------------------------------------------------

--
-- Структура таблицы `Карточка`
--

CREATE TABLE `Карточка` (
    `Код задания` int(5) NOT NULL,
    `Описание` text,
    `Формула` text,
    `Пояснение` text,
    `Подборка` int(5) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Дамп данных таблицы `Карточка`
--

INSERT INTO `Карточка` (`Код задания`, `Описание`, `Формула`, `Пояснение`, `Подборка`) VALUES
(1, 'Формула расчета силы тяжести', '`\\vec{F}=m\\vec{g}`', 'Пояснение пока отсутствует', 2),
(2, 'Уравнение движения с постоянным ускорением', '`\\vec{v}=\\vec{v_0}+\\vec{a}t`', 'Уравнения, описывающие движение тела с постоянным ускорением.', 2),
(3, 'Формула для расчета потенциальной энергии (при наличии высоты)', '`E=mgh`', 'Пояснение пока отсутствует', 2),
(4, 'Уравнение, утверждающее, что общая энергия замкнутой системы остается постоянной.', '`E_1=E_2`', 'Пояснение пока отсутствует', 2),
(5, 'Формула, описывающая связь между импульсом тела, его массой и скоростью. ', '`\\vec{p}=m\\vec{v}`', 'Пояснение пока отсутствует', 2),
(6, 'Формула, связывающая момент импульса тела с его массой, скоростью и расстоянием до оси вращения.', '`\\vec{L}=\\vec{r} \\times \\vec{p}`', 'Пояснение пока отсутствует', 2),
(7, 'Формула, связывающая работу силы и расстояние, на котором сила действует. ', '`W=\\vec{F}\\cdot\\vec{s}`', 'Пояснение пока отсутствует', 2),
(8, 'Формула второго закона термодинамики', '`\\DeltaS\\geqslant0`', 'Пояснение пока отсутствует', 2),
(9, 'Формула плотности', '`\\rho=\\frac{m}{V}`', 'Пояснение пока отсутствует', 2),
(10, 'Формула давления', '`p=\\frac{F}{A}`', 'Пояснение пока отсутствует', 2),
(11, 'Формула квадратного уравнения', '`ax^2+bx+c=0`', 'Квадратное уравнение – это уравнение вида $ax^2+bx+c=0$, где $a, b$ и $c$ – известные числа, а $x$ – неизвестное. Формула для нахождения решений (корней) такого уравнения выглядит следующим образом:\r\n\r\n`x_{1,2}=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}`', 1),
(12, 'Формула для вычисления площади треугольника', '`S=\\frac{1}{2}bh`', 'Данная формула позволяет вычислить площадь треугольника. $b$ и $h$ – это соответственно длина основания и высота треугольника. При этом высота проходит перпендикулярно к основанию.', 1),
(13, 'Формула теоремы Пифагора', '`c^2=a^2+b^2`', 'Теорема Пифагора утверждает, что в прямоугольном треугольнике квадрат гипотенузы равен сумме квадратов катетов. Формула теоремы выглядит так: $c^2 = a^2 + b^2$, где $c$ – это гипотенуза, а $a$ и $b$ – катеты.', 1),
(14, 'Формула для вычисления объема параллелепипеда', '`V=abc`', 'Объем параллелепипеда, имеющего длину, ширину и высоту соответственно $a, b$ и $c$, вычисляется по формуле $V = abc$.', 1),
(15, 'Формула для вычисления расстояния между двумя точками', '`d=\\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}`', 'Формула позволяет вычислить расстояние между двумя точками на плоскости. $x_1, y_1$ и $x_2, y_2$ – это координаты соответствующих точек на плоскости.', 1),
(16, 'Площадь прямоугольника', '`S=ab`', 'Пояснение пока отсутствует', 1),
(17, 'Формула для вычисления процента', '`p=\\frac{x}{y}\\times 100\\%`', 'Формула для вычисления процента позволяет найти долю одного числа от другого в процентном выражении. $x$ – это доля, которую необходимо вычислить, $y$ – это общее количество.', 1),
(18, 'Формула для вычисления среднего арифметического', '`\\overline{x}=\\frac{1}{n}\\sum\\limits_{i=1}^{n}x_i`', 'Формула позволяет вычислить среднее арифметическое набора чисел $x_1, x_2, ..., x_n$. Среднее арифметическое обозначается как $\\overline{x}$.', 1),
(19, 'Формула для вычисления производной', '`\\frac{df(x)}{dx}=\\lim\\limits{h\\to 0}\\frac{f(x+h)-f(x)}{h}`', 'Формула позволяет вычислить производную функции, которая является скоростью изменения функции в заданной точке. $f(x)$ – это функция, $h$ – это бесконечно малый приращение.', 1),
(20, 'Формула для вычисления суммы геометрической прогрессии', '`S_n=\\frac{a_1(1-q^n)}{1-q}`', 'Формула позволяет вычислить сумму первых $n$ членов геометрической прогрессии. $a_1$ – это первый член прогрессии, $q$ – это знаменатель прогрессии.', 1);

-- --------------------------------------------------------

--
-- Структура таблицы `Подборки`
--

CREATE TABLE `Подборки` (
    `Код подборки` int(5) NOT NULL,
    `Раздел` int(5) DEFAULT NULL,
    `Название` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Дамп данных таблицы `Подборки`
--

INSERT INTO `Подборки` (`Код подборки`, `Раздел`, `Название`) VALUES
(1, 2, '10 математических формул для 9 класса'),
(2, 1, '10 физических формул для 10-11 класса'),
(3, 2, 'Логорифмы'),
(4, 2, 'Площади'),
(5, 2, 'Объемы'),
(6, 1, 'Динамика'),
(7, 1, 'Механика'),
(8, 1, 'Кинематика');

-- --------------------------------------------------------

--
-- Структура таблицы `Пользователи`
--

CREATE TABLE `Пользователи` (
    `Код пользователя` int(10) NOT NULL,
    `Тип пользователя` int(10) DEFAULT '2',
    `e-mail` varchar(32) DEFAULT NULL,
    `Password` varchar(32) DEFAULT NULL,
    `Имя` varchar(32) DEFAULT NULL,
    `Фамилия` varchar(32) DEFAULT NULL,
    `Дата рождения` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Дамп данных таблицы `Пользователи`
--

INSERT INTO `Пользователи` (`Код пользователя`, `Тип пользователя`, `e-mail`, `Password`, `Имя`, `Фамилия`, `Дата рождения`) VALUES
(5, 2, 'Example@gmail.com', '03970f2122dc5828bc5101670b60347d', 'Евгений', 'Новоселов', '2002-12-11'),
(6, 1, 'djoni-k9@mail.ru', '9b1fffb3d535d194c7b1a4cf8d23db89', 'Евгений', 'Новоселов', '2002-03-24'),
(7, 2, 'asasdasd@gmail.com', 'cec150e2c800097e982c47977c5fd762', 'sdasdasd', 'asdasd', '2004-04-11'),
(8, 2, 'daasda@mail.ru', 'e56c82c24e2a948b1e9ed7204099f5cb', 'sdsdasd', '13123123', '0111-03-12'),
(9, 1, '11111@gmail.com', '23e89fb6081eef8ec3f90cd4b5bc981c', 'Евгений', 'Новоселов', '2023-03-28'),
(10, 2, '123132@gmail.com', '9b1fffb3d535d194c7b1a4cf8d23db89', '123123123', '11231231', '2011-11-11');

-- --------------------------------------------------------

--
-- Структура таблицы `Разделы`
--

CREATE TABLE `Разделы` (
    `Код Раздела` int(5) NOT NULL,
    `Название` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Дамп данных таблицы `Разделы`
--

INSERT INTO `Разделы` (`Код Раздела`, `Название`) VALUES
(2, 'Математика'),
(1, 'Физика');

-- --------------------------------------------------------

--
-- Структура таблицы `Тесты`
--

CREATE TABLE `Тесты` (
    `Код_Теста` int(11) NOT NULL,
    `Название` varchar(100) NOT NULL,
    `Раздел` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `Тесты`
--

INSERT INTO `Тесты` (`Код_Теста`, `Название`, `Раздел`) VALUES
(1, 'Тест 1', 2),
(2, 'Тест 2', 2),
(3, 'Тест 3\r\n', 2),
(4, 'Тест 5\r\n', 2),
(5, 'Тест 6', 2),
(6, 'Тест 7', 1),
(7, 'Тест 8\r\n', 1),
(8, 'Тест 9\r\n', 1);

-- --------------------------------------------------------

--
-- Структура таблицы `Типы пользователей`
--

CREATE TABLE `Типы пользователей` (
    `Код типа пользователя` int(10) NOT NULL,
    `Тип` varchar(50) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Дамп данных таблицы `Типы пользователей`
--

INSERT INTO `Типы пользователей` (`Код типа пользователя`, `Тип`) VALUES
(1, 'Администратор'),
(2, 'Бесплатный пользователь'),
(3, 'Премиум пользователь');

-- --------------------------------------------------------

--
-- Структура таблицы `Уровни`
--

CREATE TABLE `Уровни` (
    `id` int(10) NOT NULL,
    `название_уровня` varchar(50) NOT NULL,
    `мин_кол_заданий` int(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `Уровни`
--

INSERT INTO `Уровни` (`id`, `название_уровня`, `мин_кол_заданий`) VALUES
(8, 'Бог', 5000),
(7, 'Гений', 500),
(1, 'Младенец', 0),
(2, 'Новенький', 1),
(4, 'Опытный', 10),
(3, 'Старатель', 4),
(5, 'Трудяга', 25),
(6, 'Умник', 100);

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `Задачи`
--
ALTER TABLE `Задачи`
  ADD PRIMARY KEY (`Код_задачи`),
  ADD KEY `Тест` (`Тест`);

--
-- Индексы таблицы `История`
--
ALTER TABLE `История`
  ADD PRIMARY KEY (`Код записи истории`),
  ADD UNIQUE KEY `Пользователь_2` (`Пользователь`,`Дата прохождения задания`,`Подборка`),
  ADD KEY `Подборка` (`Подборка`),
  ADD KEY `Пользователь` (`Пользователь`);

--
-- Индексы таблицы `История тестов`
--
ALTER TABLE `История тестов`
  ADD PRIMARY KEY (`Код_Записи_Истории`),
  ADD KEY `Пользователь` (`Пользователь`),
  ADD KEY `история тестов_ibfk_2` (`Тест`);

--
-- Индексы таблицы `Карточка`
--
ALTER TABLE `Карточка`
  ADD PRIMARY KEY (`Код задания`),
  ADD KEY `Подборка` (`Подборка`);

--
-- Индексы таблицы `Подборки`
--
ALTER TABLE `Подборки`
  ADD PRIMARY KEY (`Код подборки`),
  ADD UNIQUE KEY `Название` (`Название`),
  ADD KEY `Раздел` (`Раздел`);

--
-- Индексы таблицы `Пользователи`
--
ALTER TABLE `Пользователи`
  ADD PRIMARY KEY (`Код пользователя`),
  ADD UNIQUE KEY `e-mail` (`e-mail`),
  ADD KEY `Тип пользователя` (`Тип пользователя`);

--
-- Индексы таблицы `Разделы`
--
ALTER TABLE `Разделы`
  ADD PRIMARY KEY (`Код Раздела`),
  ADD UNIQUE KEY `Название` (`Название`);

--
-- Индексы таблицы `Тесты`
--
ALTER TABLE `Тесты`
  ADD PRIMARY KEY (`Код_Теста`),
  ADD KEY `Раздел` (`Раздел`);

--
-- Индексы таблицы `Типы пользователей`
--
ALTER TABLE `Типы пользователей`
  ADD PRIMARY KEY (`Код типа пользователя`),
  ADD UNIQUE KEY `Тип` (`Тип`);

--
-- Индексы таблицы `Уровни`
--
ALTER TABLE `Уровни`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `название_уровня` (`название_уровня`,`мин_кол_заданий`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `Задачи`
--
ALTER TABLE `Задачи`
  MODIFY `Код_задачи` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT для таблицы `История`
--
ALTER TABLE `История`
  MODIFY `Код записи истории` int(5) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT для таблицы `История тестов`
--
ALTER TABLE `История тестов`
  MODIFY `Код_Записи_Истории` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=19;

--
-- AUTO_INCREMENT для таблицы `Карточка`
--
ALTER TABLE `Карточка`
  MODIFY `Код задания` int(5) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=21;

--
-- AUTO_INCREMENT для таблицы `Подборки`
--
ALTER TABLE `Подборки`
  MODIFY `Код подборки` int(5) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT для таблицы `Пользователи`
--
ALTER TABLE `Пользователи`
  MODIFY `Код пользователя` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

--
-- AUTO_INCREMENT для таблицы `Разделы`
--
ALTER TABLE `Разделы`
  MODIFY `Код Раздела` int(5) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT для таблицы `Тесты`
--
ALTER TABLE `Тесты`
  MODIFY `Код_Теста` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT для таблицы `Типы пользователей`
--
ALTER TABLE `Типы пользователей`
  MODIFY `Код типа пользователя` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT для таблицы `Уровни`
--
ALTER TABLE `Уровни`
  MODIFY `id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `Задачи`
--
ALTER TABLE `Задачи`
  ADD CONSTRAINT `задачи_ibfk_1` FOREIGN KEY (`Тест`) REFERENCES `p523033_Test_3`.`Тесты` (`Код_Теста`);

--
-- Ограничения внешнего ключа таблицы `История`
--
ALTER TABLE `История`
  ADD CONSTRAINT `история_ibfk_1` FOREIGN KEY (`Подборка`) REFERENCES `p523033_Test_3`.`Подборки` (`Код подборки`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `история_ibfk_3` FOREIGN KEY (`Пользователь`) REFERENCES `p523033_Test_3`.`Пользователи` (`Код пользователя`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `История тестов`
--
ALTER TABLE `История тестов`
  ADD CONSTRAINT `история тестов_ibfk_1` FOREIGN KEY (`Пользователь`) REFERENCES `p523033_Test_3`.`Пользователи` (`Код пользователя`),
  ADD CONSTRAINT `история тестов_ibfk_2` FOREIGN KEY (`Тест`) REFERENCES `p523033_Test_3`.`Тесты` (`Код_Теста`);

--
-- Ограничения внешнего ключа таблицы `Карточка`
--
ALTER TABLE `Карточка`
  ADD CONSTRAINT `карточка_ibfk_1` FOREIGN KEY (`Подборка`) REFERENCES `p523033_Test_3`.`Подборки` (`Код подборки`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `Подборки`
--
ALTER TABLE `Подборки`
  ADD CONSTRAINT `подборки_ibfk_1` FOREIGN KEY (`Раздел`) REFERENCES `p523033_Test_3`.`Разделы` (`Код Раздела`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `Пользователи`
--
ALTER TABLE `Пользователи`
  ADD CONSTRAINT `пользователи_ibfk_1` FOREIGN KEY (`Тип пользователя`) REFERENCES `p523033_Test_3`.`Типы пользователей` (`Код типа пользователя`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `Тесты`
--
ALTER TABLE `Тесты`
  ADD CONSTRAINT `тесты_ibfk_1` FOREIGN KEY (`Раздел`) REFERENCES `p523033_Test_3`.`Разделы` (`Код Раздела`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
